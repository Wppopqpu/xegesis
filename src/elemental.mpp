module;
#include <SDL.h>
export module xegesis.elemental;
namespace xegesis
{
	export namespace init_flags
	{
		//To enable implicit casting to integers,
		//we do not use 'enum class'.
		enum: Uint32 Flag
		{
			timer = SDL_INIT_TIMER,
			audio = SDL_INIT_AUDIO,
			//Auto inits events subsystem.
			video = SDL_INIT_VIDEO,
			//Auto inits events subsystem.
			joystick = SDL_INIT_JOYSTICK,
			//Force feedback.
			haptic = SDL_INIT_HAPTIC,
			//Auto inits joystick.
			gameController = SDL_INIT_GAMECONTROLLER,
			events = SDL_INIT_EVENTS,
			all = SDL_INIT_EVERYTHING
		};
	}
	export using InitFlag = init_flags::Flag;

	//Inits & exits the library.
	//Should be used once.
	export class Application final
	{
		public:
			
			//Init sdl with the flag (see below).
			Application(const InitFlag flag = ms_flag);
			~Application();

			static void addFlag(const InitFlag flag);


		private:
			static InitFlag ms_flag;

	};

	//This class is used on internal purposes.
	//To declare static one if need be.
	export class InitFlagAdder final
	{
		public:
			InitFlagAdder(const InitFlag flag);
	};
}//Namesace.

